
-- We represent natural numbers by the implicitly predefined datatype
-- data Nat = O | S Nat, in the following operations on such Naturals

fun inc n = S n

fun dec n =
  rlet m = inc n in m

-- Note, that this should not work, and that the error message should be
-- about unifiable output patterns (not syntactically orthogonal).

fun add p =
  case p of
    {O  , n} -> n ;
    {S m, n} -> let k = add {m,n} in S k ;

fun sub { m , n } =
  rlet k = add { m,n } in k
